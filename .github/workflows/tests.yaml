name: Tests

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    defaults:
      run:
        shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || '/bin/bash --noprofile --norc -Eeuxo pipefail {0}' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Go version from go.mod
        id: go_version
        run: echo "::set-output name=version::$(grep '^go ' go.mod | awk '{print $2}')"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.go_version.outputs.version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        continue-on-error: ${{ matrix.os == 'windows-latest' && 'true' || 'false' }}
        run: go test $(go list ./... | grep -v /junit2html/example) -race -coverprofile=coverage.out

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }},go${{ steps.go_version.outputs.version }}
          fail_ci_if_error: ${{ github.repository_owner == 'stdedos' && 'true' || 'false' }}
